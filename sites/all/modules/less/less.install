<?php
/**
 * @file
 * Install, update, and uninstall functions for the less module.
 */
 
/**
 * Implements HOOK_enable().
 */
function less_enable() {
}

/**
 * Implements hook_install().
 */
function less_uninstall() {
  variable_del('less_devel');
  variable_del('less_dir');
  variable_del('less_watch');
  cache_clear_all('less:', 'cache', TRUE);
}

/**
 * Implementation of hook_requirements().
 *
 * @param $phase The phase in which hook_requirements is run: install/runtime.
 */
function less_requirements($phase) {
  $requirements = array();
  
  module_load_include('module', 'less');
  
  $lessc_exists = function_exists('_less_inc') ? _less_inc() : FALSE;
  
  switch ($phase) {
    case 'runtime':
      if ($lessc_exists) {
        $requirements['less_version'] = array(
          'title' => t('LESS'),
          'value' => isset(lessc::$VERSION) ? preg_replace('/([^0-9\.-])+/i', '', lessc::$VERSION) : 'unknown',
          'description' => t('To check for newer versions of lessphp, go to <a href="!url" target="_blank">http://leafo.net/lessphp/</a>', array("!url" => url('http://leafo.net/lessphp/'))),
          'severity' => REQUIREMENT_OK,
        );
      }
      if (variable_get('less_devel', FALSE)) {
        $requirements['less_devel'] = array(
          'title' => 'LESS developer mode',
          'value' => t('Enabled'),
          'description' => t('LESS files are being regenerated on every request. Remember to <a href="!url">turn off</a> this feature on production websites.', array("!url" => url('admin/config/development/less'))),
          'severity' => REQUIREMENT_WARNING,
        );
      }
      if (!$lessc_exists) {
        $requirements['less_library'] = array(
          'title' => 'LESS',
          'description' => t('The lessphp library was not detected. Please follow the instructions on the <a href="!url" target="_blank">LESS project page</a> to install the lessphp library.', array("!url" => url('http://drupal.org/project/less'))),
          'severity' => REQUIREMENT_ERROR,
        );
      }
      break;
    default:
      break;
  }
  
  return $requirements;
}

